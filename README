#htma

##what
very minimal, mildly http compliant application for remote direct memory access.

as it currently stands, the design target is to parse GET requests that are
generated by google chrome. i see two main paths that will cause a user's requests
end up at my server, from clicking a link or from pasting a link into the address bar.
i highly doubt there will be any difference in the requests generated with respect
to their first line, but that's the http parsing target.

as for how the dma will work, the current theory is to provide the server a size and
an address in hex (b64 might be supported as well). the server will validate that the
requested region of memory is legal to access, and then return it verbatim.

current goal is to dump the memory after a <pre> but that's "far off."

##why
- learn rust
- make an insanely linear server that is compatible with browsers
- read (eventually, write) arbitrary data with ease
